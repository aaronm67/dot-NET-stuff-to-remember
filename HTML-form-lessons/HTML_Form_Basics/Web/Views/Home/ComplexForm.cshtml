@model Web.ViewModels.Person

@{
    ViewBag.Title = "CompletxForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    //constants used in the templates
    const string NAME = "Name";
    const string PHONE_NUMBER = "PhoneNumber";
    
    //Variables 
    var formIdTemplate = "SchoolsIWentTo_{0}__{1}";
    var formNameTemplate = "SchoolsIWentTo[{0}].{1}";
    var templateSchoolNameId = string.Format(formIdTemplate, 0, NAME);
    var templateSchoolNameFormName = string.Format(formNameTemplate, 0, NAME);
    var templatePhoneId = string.Format(formIdTemplate, 0, PHONE_NUMBER);
    var templatePhoneFormName = string.Format(formNameTemplate, 0, PHONE_NUMBER);
    var schoolCount = Model.SchoolsIWentTo.Count;   
}
@section scripts{
<script type="text/javascript">
    var templateSchoolNameId = "@templateSchoolNameId";
    var templateSchoolNameFormName = "@templateSchoolNameFormName";
    var templatePhoneId = "@templatePhoneId";
    var templatePhoneFormName = "@templatePhoneFormName";
    var schoolCount = "@schoolCount";

    $(document).ready(function () {
        $(".add-school").click(function () {
            //Clone the template
            var clone = $(".template").first().clone();

            //Update the labels and input ids
            updateFormItems(clone, schoolCount);

            //Remove the class from the template
            $(clone).attr("class", "school-item");

            //Add the cloned template to the list
            $(clone).insertAfter(this);

            //Hook up the remove event handler
            $(clone).find(".remove-school").first().click(function () {
                var school = $(this).closest(".school-item");

                //Decerment the index of all of the items with a higher index than this item
                var index = $(school).attr("data-school-item-index");
                var decrimentThese = $("[data-school-item-index]").filter(function () {
                    return $(this).attr("data-school-item-index") > index;
                });

                $(decrimentThese).each(function () {
                    updateFormItems(this, index);
                    index++;
                });

                //Remove school item
                school.remove();
                schoolCount--;
            });

            //Increment the total count of schools...
            schoolCount++;
        });
    });

    function updateFormItems(schoolItem, index) {
        var nameLabel = $(schoolItem).find("[data-school-label=@NAME]").first();
        var phoneLabel = $(schoolItem).find("[data-school-label=@PHONE_NUMBER]").first();
        var nameInput = $(schoolItem).find("[data-school-field=@NAME]").first();
        var phoneInput = $(schoolItem).find("[data-school-field=@PHONE_NUMBER]").first();

        var updatedNameId = templateSchoolNameId.replace("0", index);
        var updatedPhoneId = templatePhoneId.replace("0", index);
        var updatedNameAttr = templateSchoolNameFormName.replace("0", index);
        var updatedPhoneAttr = templatePhoneFormName.replace("0", index);

        $(nameLabel).attr("for", updatedNameId);
        $(phoneLabel).attr("for", updatedPhoneId);
        $(nameInput).attr("id", updatedNameId);
        $(phoneInput).attr("id", updatedPhoneId);
        $(nameInput).attr("name", updatedNameAttr);
        $(phoneInput).attr("name", updatedPhoneAttr);

        //Add the index for the new item
        $(schoolItem).attr("data-school-item-index", index);

        //Return a JSON object with all of the fields for easy access...
        return {"nameLabel":nameLabel, "phoneLabel":phoneLabel, "nameInput":nameInput, "phoneInput":phoneInput};
    }
</script>
}
<h2>Completx Form</h2>
@using (Html.BeginForm("ComplexForm", "Home", FormMethod.Post))
{
    <fieldset>
        <legend>Send some values</legend>
        <p>This is a form that returns a view model with a list of items in addition to the 
            simple properties.</p>
        <ol class="column col2of4">
            <li>
                @Html.LabelFor(model => model.FirstName)
                @Html.TextBoxFor(model => model.FirstName)
            </li>
            <li>
                @Html.LabelFor(model => model.Email)
                @Html.TextBoxFor(model => model.Email)
            </li>
            <li><button type="submit">Submit</button></li>
        </ol>
        <ol class="column col2of4">
            <li>
                <h2>Schools I went to</h2>
                <button type="button" class="add-school">Add School</button>
                @Html.EditorFor(model => model.SchoolsIWentTo)
                @Html.EditorFor(model => model.Template)
            </li>
        </ol>        
    </fieldset>
    
 
}